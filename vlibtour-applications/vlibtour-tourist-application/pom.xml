<?xml version="1.0" encoding="UTF-8"?>
<!--
This file is part of the course CSC5002.

The course material is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

The course material is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with the course CSC5002.  If not, see <http://www.gnu.org/licenses/>.

Initial developer(s): Denis Conan
Contributor(s):
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>eu.telecomsudparis.vlibtour</groupId>
    <artifactId>vlibtour-FeretNathan-GuillemetSamuel</artifactId>
    <version>1.0-SNAPSHOT</version>
    <relativePath>../../pom.xml</relativePath>
  </parent>
  <artifactId>vlibtour-tourist-application</artifactId>
  <name>vlibtour-tourist-application: the VLibTour tourist application with the scenario of the demonstration</name>
  <packaging>jar</packaging>

  <dependencies>
    <!-- visit common -->
    <dependency>
      <groupId>eu.telecomsudparis.vlibtour.vlibtour-libraries</groupId>
      <artifactId>vlibtour-common</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <!-- entities and API of vlibtour-tour-management-system -->
    <dependency>
      <groupId>eu.telecomsudparis.vlibtour.vlibtour-tour-management-system</groupId>
      <artifactId>vlibtour-tour-management-entity</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>eu.telecomsudparis.vlibtour.vlibtour-tour-management-system</groupId>
      <artifactId>vlibtour-tour-management-api</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>eu.telecomsudparis.vlibtour.vlibtour-visit-emulation-system</groupId>
      <artifactId>vlibtour-visit-emulation-server</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>jakarta.platform</groupId>
      <artifactId>jakarta.jakartaee-api</artifactId>
      <!-- for explanations about scope=provided, please see:
	   https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html
      -->
      <scope>provided</scope>
    </dependency>
    <!-- Running EJB lookup operations in a standalone client requires
	 GlassFish client jar -->
    <dependency>
      <groupId>org.glassfish.main.appclient</groupId>
      <artifactId>gf-client</artifactId>
    </dependency>
    <!-- API of the visit emulation server -->
    <dependency>
      <groupId>eu.telecomsudparis.vlibtour.vlibtour-visit-emulation-system</groupId>
      <artifactId>vlibtour-visit-emulation-api</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <!-- API of vlibtour-lobby-room-system -->
    <dependency>
      <groupId>eu.telecomsudparis.vlibtour.vlibtour-lobby-room-system</groupId>
      <artifactId>vlibtour-lobby-room-api</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <!-- for the class StringUtils -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <!-- library for map viewer for openstreetmap -->
    <dependency>
      <groupId>org.jxmapviewer</groupId>
      <artifactId>jxmapviewer2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openstreetmap.jmapviewer</groupId>
      <artifactId>jmapviewer</artifactId>
    </dependency>
    <!-- JSON serialisation with Jersey -->
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-grizzly2-http</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
    </dependency>
    <!-- logging in rabbitmq-->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- RabbitMQ AMQP client -->
    <dependency>
      <groupId>com.rabbitmq</groupId>
      <artifactId>amqp-client</artifactId>
    </dependency>
    <!-- RabbitMQ HTTP API client (https://github.com/rabbitmq/hop) -->
    <dependency>
      <groupId>com.rabbitmq</groupId>
      <artifactId>http-client</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- to generate random passwords -->
    <dependency>
      <groupId>org.passay</groupId>
      <artifactId>passay</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.4.0</version>
        <executions>
          <execution>
            <id>map</id>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>vlibtour.vlibtour_scenario.map_viewer.MapDemo</mainClass>
            </configuration>
          </execution>
          <execution>
            <id>touristapplijoe</id>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>vlibtour.vlibtour_scenario.VLibTourVisitTouristApplication</mainClass>
              <arguments>
                <argument>Joe</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>touristappliavrel</id>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>vlibtour.vlibtour_scenario.VLibTourVisitTouristApplication</mainClass>
              <arguments>
                <argument>Avrel</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>